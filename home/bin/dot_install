#!/usr/bin/env bash

BASEDIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
RED="$(tput setaf 1)"
NORMAL="$(tput sgr0)"

ARGS=$(getopt --options "dh" --longoptions "debug,help" --name "dot_install" -- "$@")

if [ $? -ne 0 ]; then
    exit 1
fi

eval set -- "$ARGS"

while true; do
    case "$1" in
        -d|--debug)
            shift
            DEBUG="1"
            ;;
        -h|--help)
            shift
            echo "Help msg"
            exit
            ;;
        --)
            shift
            break
            ;;
    esac
done
   
function make_link() {
    if [[ -e "$HOME/$2" ]]; then
        read -p "File $HOME/$2 exists. Do you want to overwrite it? (y/n) " -n 1;
        echo ""
        [[ $REPLY =~ ^[Yy]$ ]] && rm -f "$HOME/$2" || return
    fi
    [ "$DEBUG" != "1" ] && ln -s "$BASEDIR/$1" "$HOME/$2"
}

function fetch_updates() {
    echo "Fetching the last updates..."
    cd "$BASEDIR"
    git pull origin master
}

function symlink_configs() {
    echo "Starting creating symlinks..."
    for i in $(ls "$BASEDIR/config")
    do
        echo "Creating link $BASEDIR/config/$i to $HOME/.config/$i"
        make_link "config/$i" ".config/$i"
    done
    for i in $(ls "$BASEDIR/home")
    do
        echo "Creating link $BASEDIR/home/$i to $HOME/.$i"
        make_link "home/$i" ".$i"
    done
}
 
read -p "This may overwrite existing files in your home directory. Are you sure? (y/n) " -n 1;
echo ""
if [[ $REPLY =~ ^[Yy]$ ]]; then
    fetch_updates
    symlink_configs
fi
    
